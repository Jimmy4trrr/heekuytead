--// ‡πÇ‡∏´‡∏•‡∏î Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

--// ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
local Window = Rayfield:CreateWindow({
	Name = "Chest Auto Collector üîÜ",
	LoadingTitle = "Kuyraisus Hub",
	LoadingSubtitle = "By ‡∏ô‡∏≤‡∏¢‡∏ó‡πà‡∏≤‡∏ô",
	ConfigurationSaving = {Enabled = true, FolderName = "KuyraisusHub"}
})

--// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö
local Tab = Window:CreateTab("AutoFarm")

--// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
local ChestFarm = false
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

--// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô hop ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
local function ServerHop()
	local gameId = game.PlaceId
	local servers = {}
	local cursor = ""
	
	-- ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
	local success, result = pcall(function()
		return game:HttpGet("https://games.roblox.com/v1/games/"..gameId.."/servers/Public?sortOrder=Asc&limit=100" .. (cursor ~= "" and "&cursor="..cursor or ""))
	end)
	
	if success and result then
		local data = HttpService:JSONDecode(result)
		if data and data.data then
			for _, server in ipairs(data.data) do
				if type(server) == "table" and server.playing < server.maxPlayers then
					table.insert(servers, server.id)
				end
			end
		end
	end
	
	-- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
	if #servers > 0 then
		local randomServer = servers[math.random(1, #servers)]
		TeleportService:TeleportToPlaceInstance(gameId, randomServer, LocalPlayer)
	else
		Rayfield:Notify({
			Title = "‚ö†Ô∏è Server Hop Failed",
			Content = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á!",
			Duration = 5
		})
	end
end

--// Toggle ‡∏´‡∏•‡∏±‡∏Å
local Toggle = Tab:CreateToggle({
	Name = "Auto Chest Collect (with Server Hop)",
	CurrentValue = false,
	Flag = "AutoChestFarm",
	Callback = function(Value)
		ChestFarm = Value

		if ChestFarm then
			task.spawn(function()
				while ChestFarm do
					local chestFolder = workspace:FindFirstChild("chestSpawns")
					local foundChest = false

					if chestFolder and chestFolder:FindFirstChild("Folder") then
						for _, chest in ipairs(chestFolder.Folder:GetChildren()) do
							if not ChestFarm then break end
							
							local mainPart = chest:FindFirstChild("mainPart")
							if mainPart and mainPart:FindFirstChild("ProximityPrompt") then
								foundChest = true
								local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
								if root then
									root.CFrame = mainPart.CFrame + Vector3.new(0, 3, 0)
									task.wait(0.4)
									pcall(function()
										fireproximityprompt(mainPart.ProximityPrompt)
									end)
									task.wait(0.8)
								end
							end
						end
					end

					-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ chest ‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ ‚Üí hop server ‡πÉ‡∏´‡∏°‡πà
					if not foundChest then
						Rayfield:Notify({
							Title = "üåç Server Hop",
							Content = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô...",
							Duration = 3
						})
						ServerHop()
						break -- ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏õ‡πÄ‡∏î‡∏¥‡∏°
					end

					task.wait(3)
				end
			end)
		end
	end,
})
